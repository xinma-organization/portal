<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:annotation-config />
	
	<context:component-scan base-package="com.xinma.portal.listener" />
	<context:component-scan base-package="com.xinma.portal.cache" />
	<context:component-scan base-package="com.xinma.portal.task" />
	<context:component-scan base-package="com.xinma.portal.service" />
	
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>

	<bean id="otsClient" class="com.aliyun.openservices.ots.OTSClient">
		<constructor-arg value="${ots.endpoint}"/>
		<constructor-arg value="${ots.accessId}"/>
		<constructor-arg value="${ots.accessKey}"/>
		<constructor-arg value="${ots.instanceName}"/>
	</bean>

	<bean id="mnsClient" class="com.aliyun.mns.client.DefaultMNSClient">
		<constructor-arg value="${mns.endpoint}"/>
		<constructor-arg value="${mns.accessId}"/>
		<constructor-arg value="${mns.accessKey}"/>
	</bean>
	
	<bean id="tagTableService" class="com.xinma.base.datastore.impl.aliyun.table.TagTableServiceImpl">
		<constructor-arg ref="otsClient"/>
	</bean>
	
	<bean id="messageService" class="com.xinma.base.datastore.impl.aliyun.message.MessageServiceImpl">
		<constructor-arg ref="mnsClient"/>
	</bean>
	
	
	<bean id="aliyunAccessConfig" class="com.xinma.portal.config.AliyunAccessConfig">
		<property name="ossEndPoint" value="${oss.endpoint}" />
		<property name="ossAccessId" value="${oss.accessId}" />
		<property name="ossAccessKey" value="${oss.accessKey}" />
		<property name="ossBucketName" value="${oss.bucketName}" />
		
		<property name="otsEndPoint" value="${ots.endpoint}" />
		<property name="otsAccessId" value="${ots.accessId}" />
		<property name="otsAccessKey" value="${ots.accessKey}" />
		<property name="otsInstanceName" value="${ots.instanceName}" />
		
		<property name="mnsEndPoint" value="${mns.endpoint}" />
		<property name="mnsAccessId" value="${mns.accessId}" />
		<property name="mnsAccessKey" value="${mns.accessKey}" />
		<property name="backEndToPortalQueueName" value="${mns.queue.backEndToPortalQueue}" />
		<property name="portalToBackEndQueueName" value="${mns.queue.portalToBackEndQueue}" />
	</bean>

	<bean id="portalAppConfig" class="com.xinma.portal.config.PortalAppConfig">
		<property name="shortDomain" value="${system.short.domain.name}" />
		<property name="longDomain" value="${system.long.domain.name}" />
		<property name="longServerName" value="${system.long.servername}" />
		<property name="longServerNameScheme" value="${system.long.servername.scheme}" />
	</bean>
	
	 <!-- redis连接池的配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
      <property name="maxTotal" value="${redis.pool.maxTotal}"/>
      <property name="maxIdle" value="${redis.pool.maxIdle}"/>
      <property name="minIdle" value="${redis.pool.minIdle}"/>
      <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
      <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>
    <!-- redis的连接池pool -->
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      <constructor-arg index="0" ref="jedisPoolConfig"/>
      <constructor-arg index="1" value="${redis.host}"/>
      <constructor-arg index="2" value="${redis.port}" type="int"/>
      <constructor-arg index="3" value="${redis.timeout}" type="int"/>
      <constructor-arg index="4" value="${redis.password}"/>
    </bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />

		<property name="basenames">
			<list>
				<value>classpath:ValidationMessages</value>
				<value>classpath:ExceptionMessages</value>
			</list>
		</property>
	</bean>
</beans>